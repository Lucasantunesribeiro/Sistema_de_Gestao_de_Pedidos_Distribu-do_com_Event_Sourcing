name: PR Validation

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

env:
  JAVA_VERSION: '17'
  NODE_VERSION: '18'

jobs:
  validate:
    name: Quick Validation
    runs-on: ubuntu-latest
    
    services:
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3
        ports:
          - 6379:6379

    steps:
    - name: Checkout PR
      uses: actions/checkout@v4

    - name: Setup Java 17
      uses: actions/setup-java@v4
      with:
        distribution: 'eclipse-temurin'
        java-version: ${{ env.JAVA_VERSION }}
        cache: 'maven'

    - name: Setup Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Quick build check - shared events
      run: |
        echo "🔧 Quick build validation..."
        cd shared-events
        mvn clean compile -B

    - name: Quick build check - services
      run: |
        echo "🔧 Validating service builds..."
        mvn compile -B

    - name: Frontend lint and type check
      run: |
        echo "🔍 Frontend validation..."
        cd frontend
        npm ci
        npm run lint
        npm run type-check

    - name: Run critical tests only
      env:
        TEST_REDIS_URL: redis://localhost:6379
        SPRING_REDIS_HOST: localhost
        SPRING_REDIS_PORT: 6379
        SPRING_PROFILES_ACTIVE: test
      run: |
        echo "🧪 Running critical tests..."
        # Run only fast unit tests, skip integration tests for speed
        mvn test -Dtest="*Test" -B

    - name: Dockerfile validation
      run: |
        echo "🐳 Validating Dockerfile..."
        docker build --no-cache -t pr-test:${{ github.sha }} . || exit 1
        echo "✅ Dockerfile validation passed"

    - name: PR Size Check
      run: |
        echo "📊 PR size analysis..."
        CHANGED_FILES=$(git diff --name-only origin/main...HEAD | wc -l)
        LINES_ADDED=$(git diff --stat origin/main...HEAD | tail -1 | grep -o '[0-9]\+ insertion' | cut -d' ' -f1 || echo "0")
        
        echo "Files changed: $CHANGED_FILES"
        echo "Lines added: $LINES_ADDED"
        
        if [ $CHANGED_FILES -gt 50 ]; then
          echo "⚠️ Large PR detected ($CHANGED_FILES files). Consider breaking into smaller PRs."
        fi
        
        if [ $LINES_ADDED -gt 1000 ]; then
          echo "⚠️ Large PR detected ($LINES_ADDED lines added). Consider breaking into smaller PRs."
        fi

  security-quick:
    name: Quick Security Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout PR
      uses: actions/checkout@v4
    
    - name: Secret Detection
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified

    - name: Maven Security Check
      uses: actions/setup-java@v4
      with:
        distribution: 'eclipse-temurin'
        java-version: '17'
        cache: 'maven'
    
    - name: Quick dependency audit
      run: |
        echo "🔒 Quick security audit..."
        mvn org.owasp:dependency-check-maven:check -DskipTestScope=true -B

  pr-summary:
    name: PR Summary
    runs-on: ubuntu-latest
    needs: [validate, security-quick]
    if: always()
    
    steps:
    - name: PR Validation Summary
      run: |
        echo "## 📋 PR Validation Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ needs.validate.result }}" == "success" ]; then
          echo "✅ **Build & Tests**: PASSED" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ **Build & Tests**: FAILED" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ "${{ needs.security-quick.result }}" == "success" ]; then
          echo "✅ **Security Check**: PASSED" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ **Security Check**: FAILED" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "🔗 **PR**: #${{ github.event.number }}" >> $GITHUB_STEP_SUMMARY
        echo "👤 **Author**: @${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
        echo "🌿 **Branch**: ${{ github.head_ref }}" >> $GITHUB_STEP_SUMMARY