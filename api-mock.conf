events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/json;

    server {
        listen 80;
        server_name localhost;

        # Enable CORS
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Correlation-ID' always;

        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Correlation-ID';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        # Health check
        location /health {
            return 200 '{"status":"healthy","timestamp":"2025-07-25T20:00:00Z"}';
            add_header Content-Type application/json;
        }

        # Dashboard metrics
        location /api/dashboard/metrics {
            return 200 '{
                "totalOrders": 42,
                "totalRevenue": 12500.00,
                "conversionRate": 85.5,
                "pendingOrders": 8,
                "dailyOrders": [
                    {"date": "2025-07-20", "value": 15},
                    {"date": "2025-07-21", "value": 22},
                    {"date": "2025-07-22", "value": 18},
                    {"date": "2025-07-23", "value": 25},
                    {"date": "2025-07-24", "value": 30},
                    {"date": "2025-07-25", "value": 42}
                ]
            }';
            add_header Content-Type application/json;
        }

        # Orders
        location /api/orders {
            if ($request_method = GET) {
                return 200 '[
                    {
                        "orderId": "order-001",
                        "customerId": "customer-123",
                        "status": "PENDING",
                        "items": [
                            {
                                "productId": "product-001",
                                "productName": "Produto Teste",
                                "quantity": 2,
                                "unitPrice": 50.00,
                                "totalPrice": 100.00
                            }
                        ],
                        "totalAmount": 100.00,
                        "createdAt": "2025-07-25T17:00:00Z",
                        "updatedAt": "2025-07-25T17:00:00Z"
                    },
                    {
                        "orderId": "order-002",
                        "customerId": "customer-456",
                        "status": "COMPLETED",
                        "items": [
                            {
                                "productId": "product-002",
                                "productName": "Produto Premium",
                                "quantity": 1,
                                "unitPrice": 200.00,
                                "totalPrice": 200.00
                            }
                        ],
                        "totalAmount": 200.00,
                        "createdAt": "2025-07-25T16:00:00Z",
                        "updatedAt": "2025-07-25T16:30:00Z"
                    }
                ]';
            }
            if ($request_method = POST) {
                return 201 '{
                    "orderId": "order-new",
                    "customerId": "customer-new",
                    "status": "PENDING",
                    "items": [],
                    "totalAmount": 0.00,
                    "createdAt": "2025-07-25T20:00:00Z",
                    "updatedAt": "2025-07-25T20:00:00Z"
                }';
            }
            add_header Content-Type application/json;
        }

        # Payments
        location /api/payments {
            return 200 '[
                {
                    "paymentId": "payment-001",
                    "orderId": "order-001",
                    "amount": 100.00,
                    "status": "APPROVED",
                    "paymentMethod": "CREDIT_CARD",
                    "createdAt": "2025-07-25T17:05:00Z",
                    "retryCount": 0,
                    "correlationId": "corr-001"
                },
                {
                    "paymentId": "payment-002",
                    "orderId": "order-002",
                    "amount": 200.00,
                    "status": "PENDING",
                    "paymentMethod": "PIX",
                    "createdAt": "2025-07-25T16:05:00Z",
                    "retryCount": 1,
                    "correlationId": "corr-002"
                }
            ]';
            add_header Content-Type application/json;
        }

        # Inventory
        location /api/inventory {
            return 200 '[
                {
                    "productId": "product-001",
                    "productName": "Produto Teste",
                    "availableQuantity": 50,
                    "reservedQuantity": 5,
                    "totalQuantity": 55,
                    "lastUpdated": "2025-07-25T17:00:00Z"
                },
                {
                    "productId": "product-002",
                    "productName": "Produto Premium",
                    "availableQuantity": 0,
                    "reservedQuantity": 2,
                    "totalQuantity": 2,
                    "lastUpdated": "2025-07-25T16:00:00Z"
                },
                {
                    "productId": "product-003",
                    "productName": "Produto BÃ¡sico",
                    "availableQuantity": 10,
                    "reservedQuantity": 0,
                    "totalQuantity": 10,
                    "lastUpdated": "2025-07-25T15:00:00Z"
                }
            ]';
            add_header Content-Type application/json;
        }

        # Default response
        location / {
            return 404 '{"error":"Endpoint not found"}';
            add_header Content-Type application/json;
        }
    }
}