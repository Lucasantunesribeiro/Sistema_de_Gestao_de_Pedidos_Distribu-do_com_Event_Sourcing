# Railway Production Profile Configuration
# Optimized for production deployment on Railway.app

spring:
  application:
    name: order-service
  
  # Production Database Configuration
  datasource:
    url: ${DATABASE_URL}
    hikari:
      # Railway optimized connection pool
      maximum-pool-size: 30
      minimum-idle: 15
      connection-timeout: 8000
      validation-timeout: 3000
      idle-timeout: 300000
      max-lifetime: 1200000
      leak-detection-threshold: 60000
      pool-name: OrderServiceRailwayCP
      register-mbeans: true
      auto-commit: false
      connection-test-query: SELECT 1

  # JPA Production Configuration
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false
        show_sql: false
        connection:
          provider_disables_autocommit: true
        jdbc:
          batch_size: 25
          order_inserts: true
          order_updates: true
        cache:
          use_second_level_cache: false

  # RabbitMQ Production Configuration
  rabbitmq:
    url: ${RABBITMQ_URL}
    connection-timeout: 30000
    requested-heartbeat: 60
    publisher-confirm-type: correlated
    publisher-returns: true
    listener:
      simple:
        retry:
          enabled: true
          initial-interval: 1000
          max-attempts: 5
          multiplier: 2
        prefetch: 15
        concurrency: 2
        max-concurrency: 10

# Server Configuration for Railway
server:
  port: ${PORT:8081}
  servlet:
    context-path: /api/orders
  tomcat:
    threads:
      max: 250
      min-spare: 20
    connection-timeout: 20000
    max-connections: 10000
    max-http-post-size: 2MB
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain
    min-response-size: 1024

# Production Management and Monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
      show-components: always
      probes:
        enabled: true
  health:
    defaults:
      enabled: true
    db:
      enabled: true
    rabbit:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      service: order-service
      environment: railway
      version: ${APP_VERSION:1.0.0}

# Production Logging
logging:
  level:
    com.ordersystem.order: INFO
    org.springframework.amqp: WARN
    org.springframework.web: WARN
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
    org.springframework.security: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{correlationId:-}] [%logger{36}] - %msg%n"
    
# Production Application Configuration
app:
  database:
    maximum-pool-size: 30
    minimum-idle: 15
    connection-timeout: 8s
    idle-timeout: 5m
    max-lifetime: 20m
    leak-detection-threshold: 60s
    pool-usage-threshold: 80
    connection-acquire-increment: 3
  
  rabbitmq:
    connection-timeout: 30s
    requested-heartbeat: 60s
    channel-cache-size: 30
    publisher-confirms: true
    publisher-returns: true
    max-retry-attempts: 5
    initial-interval: 1s
    multiplier: 2.0
    max-interval: 15s
  
  resilience:
    max-retries: 5
    initial-delay: 1s
    max-delay: 30s
    backoff-multiplier: 2.0
    failure-threshold: 10
    circuit-breaker-timeout: 2m
    database-connection-timeout: 20s
    rabbitmq-connection-timeout: 30s
    health-check-interval: 30s
    health-check-failure-threshold: 5
  
  # Production Saga Configuration
  saga:
    recovery:
      enabled: true
      timeout-minutes: 10
      max-retries: 5
      cleanup-days: 90
      batch-size: 50
      
    performance:
      target-completion-rate: 99.9
      max-duration-minutes: 15
      alert-threshold-minutes: 8
      
    monitoring:
      enabled: true
      metrics-interval: 60s
      health-check-interval: 120s
      detailed-logging: false

# Security Configuration
security:
  cors:
    allowed-origins: ${CORS_ORIGINS:https://*.railway.app}
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS
    allowed-headers: "*"
    allow-credentials: true
    max-age: 3600
  
  jwt:
    secret: ${JWT_SECRET:default-secret-change-in-production}
    expiration: 86400000 # 24 hours
    refresh-expiration: 604800000 # 7 days