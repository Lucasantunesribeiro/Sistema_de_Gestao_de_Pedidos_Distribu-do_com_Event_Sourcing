spring:
  application:
    name: order-query-service
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:local}
  
  # Database Configuration (H2 for local development)
  datasource:
    url: ${DATABASE_URL:jdbc:h2:mem:testdb}
    username: ${DATABASE_USERNAME:sa}
    password: ${DATABASE_PASSWORD:}
    driver-class-name: org.h2.Driver
    hikari:
      connection-timeout: 10000
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 600000
      max-lifetime: 1800000
      leak-detection-threshold: 60000
      pool-name: QueryServiceH2HikariCP

  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        format_sql: false
        show_sql: false

  # H2 Console (for local development)
  h2:
    console:
      enabled: true
      path: /h2-console

  # RabbitMQ Configuration
  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME:guest}
    password: ${RABBITMQ_PASSWORD:guest}
    connection-timeout: 30000
    requested-heartbeat: 60
    publisher-confirm-type: correlated
    publisher-returns: true

# Server Configuration
server:
  port: 8084
  servlet:
    context-path: /api/orders

# Management and Monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
      base-path: /actuator
  endpoint:
    health:
      show-details: always

# Enhanced Logging Configuration
logging:
  level:
    com.ordersystem.query: INFO
    com.ordersystem.query.listener: DEBUG
    com.ordersystem.query.service: DEBUG
    com.ordersystem.query.config: INFO
    org.springframework.amqp: INFO
    org.springframework.amqp.rabbit.connection: INFO
    org.springframework.amqp.rabbit.core: INFO
    org.springframework.amqp.rabbit.listener: INFO
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
    org.springframework.transaction: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{correlationId:-}] [%X{orderId:-}] [%X{eventType:-}] %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{correlationId:-}] [%X{orderId:-}] [%X{eventType:-}] %logger{36} - %msg%n"
  file:
    name: logs/query-service.log
    max-size: 10MB
    max-history: 30

# Application Specific Configuration
app:
  rabbitmq:
    connection-timeout: 30s
    requested-heartbeat: 60s
    channel-cache-size: 25
    publisher-confirms: true
    publisher-returns: true
    max-retry-attempts: 3
    initial-interval: 1s
    multiplier: 2.0
    max-interval: 10s

# Resilience4j Configuration (Simplified)
resilience4j:
  circuitbreaker:
    instances:
      payment-service:
        sliding-window-size: 10
        failure-rate-threshold: 50
        wait-duration-in-open-state: 10s
        permitted-number-of-calls-in-half-open-state: 3
        minimum-number-of-calls: 5
        automatic-transition-from-open-to-half-open-enabled: true
        register-health-indicator: true
        record-exceptions:
          - java.net.ConnectException
          - java.net.SocketTimeoutException
        ignore-exceptions:
          - java.lang.IllegalArgumentException
          
      inventory-service:
        sliding-window-size: 10
        failure-rate-threshold: 50
        wait-duration-in-open-state: 5s
        permitted-number-of-calls-in-half-open-state: 3
        minimum-number-of-calls: 5
        automatic-transition-from-open-to-half-open-enabled: true
        register-health-indicator: true
        record-exceptions:
          - java.net.ConnectException
          - java.net.SocketTimeoutException
        ignore-exceptions:
          - java.lang.IllegalArgumentException
          
  retry:
    instances:
      payment-service:
        max-attempts: 3
        wait-duration: 1s
        exponential-backoff-multiplier: 2
        retry-exceptions:
          - java.net.SocketTimeoutException
          - java.net.ConnectException
        ignore-exceptions:
          - java.lang.IllegalArgumentException
          
      inventory-service:
        max-attempts: 2
        wait-duration: 500ms
        exponential-backoff-multiplier: 1.5
        retry-exceptions:
          - java.net.SocketTimeoutException
          - java.net.ConnectException
        ignore-exceptions:
          - java.lang.IllegalArgumentException

---
# Local Profile (H2 Database)
spring:
  config:
    activate:
      on-profile: local
  datasource:
    url: jdbc:h2:mem:testdb
    username: sa
    password: 
    driver-class-name: org.h2.Driver
  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
  h2:
    console:
      enabled: true
      path: /h2-console

logging:
  level:
    com.ordersystem.query: DEBUG
    com.ordersystem.query.listener: DEBUG
    com.ordersystem.query.service: DEBUG
    com.ordersystem.query.config: DEBUG
    org.springframework.amqp: DEBUG
    org.springframework.amqp.rabbit.connection: DEBUG
    org.springframework.amqp.rabbit.core: DEBUG
    org.springframework.amqp.rabbit.listener: DEBUG
    org.springframework.transaction: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{correlationId:-}] [%X{orderId:-}] [%X{eventType:-}] %logger{36} - %msg%n"