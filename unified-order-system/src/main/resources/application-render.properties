# Configuração específica para Render.com com infraestrutura existente
spring.application.name=unified-order-system
server.port=${PORT:8080}

# Database Configuration - Handled by DatabaseConfig.java
# spring.datasource.* properties are managed programmatically

# JPA Configuration para produção
spring.jpa.hibernate.ddl-auto=${JPA_DDL_AUTO:update}
spring.jpa.show-sql=${JPA_SHOW_SQL:false}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Connection Pool otimizado para Render
spring.datasource.hikari.maximum-pool-size=${HIKARI_MAX_POOL_SIZE:10}
spring.datasource.hikari.minimum-idle=${HIKARI_MIN_IDLE:5}
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.leak-detection-threshold=60000

# Redis Configuration for Render - Explicit SSL Configuration
spring.data.redis.host=${REDIS_HOST:localhost}
spring.data.redis.port=${REDIS_PORT:6379}
spring.data.redis.password=${REDIS_PASSWORD:}
spring.data.redis.timeout=5000ms
# Explicitly disable SSL to prevent property binding error
spring.data.redis.ssl.enabled=false

# Cache Configuration - Condicional baseado na disponibilidade do Redis
spring.cache.type=${CACHE_TYPE:simple}
spring.cache.redis.time-to-live=${CACHE_TTL:600000}
spring.cache.redis.cache-null-values=false

# App Configuration
app.redis.enabled=${REDIS_ENABLED:false}

# Logging para produção
logging.level.com.ordersystem=${LOG_LEVEL_APP:INFO}
logging.level.org.springframework.cache=${LOG_LEVEL_CACHE:WARN}
logging.level.org.hibernate.SQL=${LOG_LEVEL_SQL:WARN}
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%X{correlationId:-}] %logger{36} - %msg%n

# Management e Health Checks
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=when-authorized
management.health.redis.enabled=true
management.health.db.enabled=true
management.metrics.export.prometheus.enabled=true

# Security Headers
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.http-only=true

# OpenAPI Documentation
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method

# Performance Tuning
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

# Error Handling
server.error.include-message=always
server.error.include-binding-errors=always

# Configurações específicas do Render
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=false