services:
  - type: web
    name: order-service
    env: java
    buildCommand: cd shared-events && mvn clean install -DskipTests && cd ../services/order-service && mvn clean package -DskipTests
    startCommand: cd services/order-service && java -jar target/order-service-1.0.0.jar
    envVars:
      - key: PORT
        value: 8081
      - key: SPRING_PROFILES_ACTIVE
        value: render

  - type: web
    name: payment-service
    env: java
    buildCommand: cd shared-events && mvn clean install -DskipTests && cd ../services/payment-service && mvn clean package -DskipTests
    startCommand: cd services/payment-service && java -jar target/payment-service-1.0.0.jar
    envVars:
      - key: PORT
        value: 8082
      - key: SPRING_PROFILES_ACTIVE
        value: render

  - type: web
    name: inventory-service
    env: java
    buildCommand: cd shared-events && mvn clean install -DskipTests && cd ../services/inventory-service && mvn clean package -DskipTests
    startCommand: cd services/inventory-service && java -jar target/inventory-service-1.0.0.jar
    envVars:
      - key: PORT
        value: 8083
      - key: SPRING_PROFILES_ACTIVE
        value: render

  - type: web
    name: query-service
    env: java
    buildCommand: cd shared-events && mvn clean install -DskipTests && cd ../services/order-query-service && mvn clean package -DskipTests
    startCommand: cd services/order-query-service && java -jar target/order-query-service-1.0.0.jar
    envVars:
      - key: PORT
        value: 8084
      - key: SPRING_PROFILES_ACTIVE
        value: render

  - type: web
    name: frontend
    env: node
    buildCommand: cd frontend && npm install && npm run build
    startCommand: cd frontend && npm run preview -- --port $PORT --host 0.0.0.0
    envVars:
      - key: PORT
        value: 3000

databases:
  - name: ordersystem-db
    databaseName: ordersystem
    user: ordersystem
