services:
  # PostgreSQL Database
  - type: pserv
    name: order-postgres-db
    plan: starter
    region: oregon
    databaseName: order_system_db
    databaseUser: order_system_user
    ipAllowList: []

  # Redis Instance  
  - type: redis
    name: order-redis-cache
    plan: starter
    region: oregon
    ipAllowList: []

  # Web Service (nginx + frontend + query-service)
  - type: web
    name: gestao-de-pedidos-web
    env: docker
    plan: starter
    region: oregon
    dockerfilePath: ./Dockerfile
    dockerContext: .
    healthCheckPath: /health
    envVars:
      - key: SERVICE_TYPE
        value: web
      - key: DATABASE_URL
        fromDatabase:
          name: order-postgres-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: order-redis-cache
          property: connectionString
      - key: MESSAGING_TYPE
        value: redis
      - key: SPRING_PROFILES_ACTIVE
        value: render
      - key: JAVA_OPTS
        value: "-Xmx128m -XX:+UseContainerSupport"

  # Order Service Worker
  - type: worker
    name: gestao-de-pedidos-order
    env: docker
    plan: starter
    region: oregon
    dockerfilePath: ./Dockerfile
    dockerContext: .
    envVars:
      - key: SERVICE_TYPE
        value: order
      - key: DATABASE_URL
        fromDatabase:
          name: order-postgres-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: order-redis-cache
          property: connectionString
      - key: MESSAGING_TYPE
        value: redis
      - key: SPRING_PROFILES_ACTIVE
        value: render
      - key: JAVA_OPTS
        value: "-Xmx96m -XX:+UseContainerSupport"

  # Payment Service Worker
  - type: worker
    name: gestao-de-pedidos-payment
    env: docker
    plan: starter
    region: oregon
    dockerfilePath: ./Dockerfile
    dockerContext: .
    envVars:
      - key: SERVICE_TYPE
        value: payment
      - key: DATABASE_URL
        fromDatabase:
          name: order-postgres-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: order-redis-cache
          property: connectionString
      - key: MESSAGING_TYPE
        value: redis
      - key: SPRING_PROFILES_ACTIVE
        value: render
      - key: JAVA_OPTS
        value: "-Xmx96m -XX:+UseContainerSupport"

  # Inventory Service Worker
  - type: worker
    name: gestao-de-pedidos-inventory
    env: docker
    plan: starter
    region: oregon
    dockerfilePath: ./Dockerfile
    dockerContext: .
    envVars:
      - key: SERVICE_TYPE
        value: inventory
      - key: DATABASE_URL
        fromDatabase:
          name: order-postgres-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: order-redis-cache
          property: connectionString
      - key: MESSAGING_TYPE
        value: redis
      - key: SPRING_PROFILES_ACTIVE
        value: render
      - key: JAVA_OPTS
        value: "-Xmx96m -XX:+UseContainerSupport"